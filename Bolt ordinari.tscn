[gd_scene load_steps=4 format=2]

[ext_resource path="res://resources/graphics/bolt.png" type="Texture" id=1]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float outLineSize  = 0.05;
//uniform vec4  outLineColor = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 outLineColor : hint_color;

varying vec2 o;
varying vec2 f;
uniform int intensity = 3; // velikost roba

void vertex()
{
	//Expands the vertexes so we have space to draw the outline if we were on the edge.
	o = VERTEX;
	vec2 uv = (UV - 0.5);
	VERTEX += uv * float(intensity);
	f = VERTEX;
}


void fragment()
{
    vec4 tcol = texture(TEXTURE, UV);
    
    if (tcol.a == 0.0)
    {
        if (texture(TEXTURE, UV + vec2(0.0,          outLineSize)).a  != 0.0 ||
//            texture(TEXTURE, UV + vec2(0.0,         -outLineSize)).a  != 0.0 ||
//            texture(TEXTURE, UV + vec2(outLineSize,  0.0)).a          != 0.0 ||
//            texture(TEXTURE, UV + vec2(-outLineSize, 0.0)).a          != 0.0 ||
//            texture(TEXTURE, UV + vec2(-outLineSize, outLineSize)).a  != 0.0 ||
//            texture(TEXTURE, UV + vec2(-outLineSize, -outLineSize)).a != 0.0 ||
//            texture(TEXTURE, UV + vec2(outLineSize,  outLineSize)).a  != 0.0 ||
            texture(TEXTURE, UV + vec2(outLineSize,  -outLineSize)).a != 0.0) 
            tcol = outLineColor;
    }
    
    COLOR = tcol;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/outLineSize = 0.1
shader_param/outLineColor = Color( 0.470588, 0.415686, 0.415686, 1 )
shader_param/intensity = 3

[node name="Bolt ordinari" type="Sprite"]
material = SubResource( 5 )
position = Vector2( 14.0611, 31.1862 )
rotation = 1.5708
texture = ExtResource( 1 )
offset = Vector2( -30.6861, 14.0612 )
