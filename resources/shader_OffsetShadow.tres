[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;


uniform vec4 shadow_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform vec4 cutout_color : hint_color = vec4(0.0, 1.0, 0.0, 1.0); // zanekrat nevgrajena
uniform vec4 transparent_color : hint_color = vec4(0.0, 0.0, 0.0, 0.5);

uniform float shadow_offset_x = 5.0; // to niso texli ampak pixli
uniform float shadow_offset_y = 5.0; // to niso texli ampak pixli

// dimenzija teksture za uskladitev texlov s pixli (1/texture original size)  
uniform float texture_width = 640.0;
uniform float texture_height = 360.0;



void fragment(){
	
	// preračun pravge offseta sence ... pixle konvertamo v texle
	vec2 shadow_offset = vec2(shadow_offset_x / texture_width, shadow_offset_y / texture_height);
	
	// poberemo prikaz texture in apliciramo samo offset še predno apliciramo barvo 
	vec4 color = texture(TEXTURE, UV + shadow_offset);
	
	// barva sence, kjer transparenca ni 100%
	if (color.a > 0.0){
		
		// vse je v barvi sence ... z množenjem transparence, dobimo presentacijo transparence
		color = shadow_color * color.a;
	}
	// transparenca, kjer je transparenca 100%
	else {
		color = transparent_color;
	}
	

	
	COLOR = color;
}"
