[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/sprites/bolt/explosion_smoke_sprite.png" type="Texture" id=1]

[sub_resource type="Shader" id=59]
code = "shader_type canvas_item;
render_mode blend_mix;




uniform sampler2D tex;

float sample (in vec2 st){ // returns float, takes input \"input vec2 named st\" 
	// sample texture at \"st\", return its alpha
	return texture(tex, st).a;
	
}


void fragment(){
	
	vec4 pixel_color = texture(TEXTURE,UV);
	vec4 add_color = vec4(1.0, 0.0, 1.0, 1.0);
//	COLOR = pixel_color * pixel_color.a;
	
	COLOR = pixel_color.a * add_color;
//	COLOR = mix(pixel_color, add_color, add_color.a);
//	if (pixel_color.rgb == vec3(1.0)){
//
////		COLOR.rgb = vec3(1.0);
//		COLOR.rgb = vec3(1.0, 1.0, 0.5);
//		COLOR.a = COLOR.a;
//
//
//	}
//	// preraƒçun pravega offseta sence ... pixle konvertamo v texle
////	vec2 shadow_offset = vec2(shadow_direction.x / texture_width, shadow_direction.y / texture_height);
//
//	vec2 size = TEXTURE_PIXEL_SIZE * shadow_step_offset;
//	float shadow = 0.0;
//
//	float stretch_factor = 0.0;
//	float offset_x = shadow_offset * shadow_direction.x / 100.0; // z deljenjem dobimo bolj normalen slide
//	float offset_y = shadow_offset * shadow_direction.y / 100.0;
//
//	for (int i = 0; i < shadow_steps; i++) {
//		stretch_factor += 1.0; // lahko bi uporabil \"i\" pa mi ne pusti
//		shadow += texture(TEXTURE, UV + (size * shadow_direction * stretch_factor) + vec2(offset_x, offset_y)).a;
//
//	}
//
//	// ta vrstica maska senco, da je kao pod teksturo ... podobno kot step funkcij?
//	shadow = min(shadow, 1.0);
//
//	vec4 color = texture(TEXTURE, UV);
//	COLOR = mix(color, shadow_color, shadow - color.a);
}
"

[sub_resource type="ShaderMaterial" id=60]
shader = SubResource( 59 )
shader_param/tex = ExtResource( 1 )

[sub_resource type="Curve" id=5]
max_value = 5.0
_data = [ Vector2( 0, 0 ), 0.0, 4.14464, 0, 0, Vector2( 1, 1.56198 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=58]
colors = PoolColorArray( 1, 1, 0.996078, 1, 1, 1, 1, 0 )

[node name="EngineParticles" type="CPUParticles2D"]
show_behind_parent = true
material = SubResource( 60 )
rotation = 1.5708
scale = Vector2( 2, 2 )
randomness = 0.25
lifetime_randomness = 1.0
local_coords = false
emission_shape = 2
emission_rect_extents = Vector2( 0.1, 0.7 )
direction = Vector2( -1, 0 )
spread = 0.0
gravity = Vector2( 0, 0 )
initial_velocity = 30.0
initial_velocity_random = 0.5
linear_accel = -20.0
linear_accel_random = 1.0
damping_curve = SubResource( 5 )
color_ramp = SubResource( 58 )
